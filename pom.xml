<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- *************************************************************** -->
<!-- Il s'agit d'un composant Java de l'application développée.      -->
<!-- *************************************************************** -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Tous les composants de l'application "hérite" du projet ROOT -->
	<parent>
		<groupId>com.inetpsa.jip</groupId>
		<artifactId>psa-root</artifactId>
		<version>2.3.1</version>
	</parent>
	<!-- EDIT : donner un identifiant à ce composant (l'identifiant sera aussi le nom du JAR généré) -->
	<groupId>com.inetpsa.bgc00</groupId>
	<artifactId>bozBatch</artifactId>
	<version>4.2.3</version>
	<!-- Il s'agit d'un projet Java : le packaging est "jar" -->
	<packaging>jar</packaging>
	<!-- EDIT : le nom lisible de ce composant -->
	<name>Projet bozBatch</name>
	<!-- EDIT : une courte description du composant -->
	<!-- !!! Ne pas mettre sur plusieurs lignes !!! -->
	<description>Module contenant les classes de batch.</description>
	<build>
		<!-- EDIT : le répertoire des sources Java (sera généralement "src" pour un projet Java) -->
		<sourceDirectory>src</sourceDirectory>
		<!-- EDIT : le répertoire des tests unitaires JUnit -->
		<!--testSourceDirectory>test</testSourceDirectory-->
		<!-- Ressources à inclure dans le JAR généré, déclarées par ordre d'importance : si un même -->
		<!-- fichier est référencé dans plusieurs éléments <resource>, celui du 1er élément sera utilisé  -->
		<resources>
			<!-- EDIT : spécifier ici ces fichiers ressources. Pour un projet LEGO, la configuration -->
			<!-- suivante est correcte (à vérifier tout de même dans le JAR généré ) -->
			<resource>
				<!-- si un fichier trouvé dans ce répertoire porte le même nom qu'un trouvé ci-dessus -->
				<!-- alors il sera ignoré -->
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>com.inetpsa.jip</groupId>
						<artifactId>checkstyle</artifactId>
						<!-- EDIT : version des conventions PSA utilisées par Checkstyle -->
						<version>4.0.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
		
		</plugins>
	</build>
	
		<!-- EDIT : nom du module CVS (généralement identique au nom du projet dans WSAD/IRWD/Eclipse) -->

		<properties>
			<versionLEGO>2.4.0</versionLEGO>
			<!-- EDIT : PRD "Jip" du projet : donn_X lors de la cr_Xation de l'environnement JIP -->
			<prdJip>bgc00</prdJip>
			<!-- EDIT : nom du serveur CVS -->
			<cvsHost>yval8020</cvsHost>
			<!-- Cf. http://jip.inetpsa.com/bestPractices/jipCvsUser.html -->
			<cvsUser>mvnbgc</cvsUser>
			<!-- EDIT : CVSROOT du projet sur Beaqbr -->
			<cvsRoot>/usersdev/cvs00/bgc</cvsRoot>  
			<!-- EDIT : nom du module CVS (g_Xn_Xralement identique au nom du projet dans Eclipse) -->
			<cvsModuleName>bozBatch</cvsModuleName>
			<!-- EDIT : version des crit_Xres de qualification utilis_Xs -->
			<qualificationAppliJava>2.0.0</qualificationAppliJava>
			<!-- EDIT : Version de Java pour les sources et les binaires en cible -->
			<!--        La version par d_Xfaut est 1.4 / 1.4 -->
			<javaSourceCompatibility>1.4</javaSourceCompatibility>
			<javaTargetCompatibility>1.4</javaTargetCompatibility>
			<!-- <sourceEncoding>UTF-8</sourceEncoding> -->
		</properties>

		<!-- EDIT : mettre ses dépendances ci-dessous -->
	<dependencies>
		<dependency>
			<groupId>com.inetpsa.fwk</groupId>
			<artifactId>fwk-noyau</artifactId>
			<version>${versionLEGO}</version>
		</dependency>
		<dependency>
			<groupId>com.inetpsa.fwk</groupId>
			<artifactId>fwk-sql</artifactId>
			<version>${versionLEGO}</version>
		</dependency>
		<dependency>
			<groupId>com.inetpsa.fwk</groupId>
			<artifactId>fwk-vrn</artifactId>
			<version>${versionLEGO}</version>
		</dependency>
		<dependency>
			<groupId>com.inetpsa.fwk</groupId>
			<artifactId>fwk-taglib</artifactId>
			<version>${versionLEGO}</version>
		</dependency>
		<dependency>
			<groupId>ibm</groupId>
			<artifactId>j2ee</artifactId>
			<version>1.3.1</version>
			<!-- Le scope "provided" indique que la dépendance est requise pour compiler -->
			<!-- mais ne doit pas être inclue par transitivité. En effet, on ne veut pas -->
			<!-- avoir un JAR de J2EE dans le WEB-INF/lib de l'application. -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.8</version>
		</dependency>
	</dependencies>
	<profiles>
		<!-- Profile utilisé pour générer le classpath dans Eclipse : ne pas toucher -->
		<profile>
			<id>updateEclipse</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-eclipse-plugin</artifactId>
						<executions>
							<execution>
								<phase>validate</phase>
								<id>classpath</id>
								<goals>
									<goal>eclipse</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverageClassFilter</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<configuration>
							<instrumentation>
								<excludes>
									<exclude>
										com/inetpsa/eqc/db/**/*.class
									</exclude>
									<exclude>
										com/inetpsa/eqc/**/*Exception*.class
									</exclude>
								</excludes>
							</instrumentation>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
</project>



